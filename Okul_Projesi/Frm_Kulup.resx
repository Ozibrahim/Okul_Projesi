<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>